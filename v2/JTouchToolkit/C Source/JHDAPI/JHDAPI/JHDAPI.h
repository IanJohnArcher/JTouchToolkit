/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_uce_userlab_haptics_HD_HDAPI */

#ifndef _Included_com_uce_userlab_haptics_HD_HDAPI
#define _Included_com_uce_userlab_haptics_HD_HDAPI
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     com_uce_userlab_haptics_HD_HDAPI
 * Method:    hdBeginFrame
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_com_uce_userlab_haptics_HD_HDAPI_hdBeginFrame
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_uce_userlab_haptics_HD_HDAPI
 * Method:    hdDisable
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_com_uce_userlab_haptics_HD_HDAPI_hdDisable
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_uce_userlab_haptics_HD_HDAPI
 * Method:    hdDisableDevice
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_com_uce_userlab_haptics_HD_HDAPI_hdDisableDevice
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_uce_userlab_haptics_HD_HDAPI
 * Method:    hdEnable
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_com_uce_userlab_haptics_HD_HDAPI_hdEnable
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_uce_userlab_haptics_HD_HDAPI
 * Method:    hdEndFrame
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_com_uce_userlab_haptics_HD_HDAPI_hdEndFrame
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_uce_userlab_haptics_HD_HDAPI
 * Method:    hdGetBooleanv
 * Signature: (I)[Z
 */
JNIEXPORT jbooleanArray JNICALL Java_com_uce_userlab_haptics_HD_HDAPI_hdGetBooleanv
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_uce_userlab_haptics_HD_HDAPI
 * Method:    hdGetIntegerv
 * Signature: (I)[I
 */
JNIEXPORT jintArray JNICALL Java_com_uce_userlab_haptics_HD_HDAPI_hdGetIntegerv
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_uce_userlab_haptics_HD_HDAPI
 * Method:    hdGetFloatv
 * Signature: (I)[F
 */
JNIEXPORT jfloatArray JNICALL Java_com_uce_userlab_haptics_HD_HDAPI_hdGetFloatv
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_uce_userlab_haptics_HD_HDAPI
 * Method:    hdGetDoublev
 * Signature: (I)[D
 */
JNIEXPORT jdoubleArray JNICALL Java_com_uce_userlab_haptics_HD_HDAPI_hdGetDoublev
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_uce_userlab_haptics_HD_HDAPI
 * Method:    hdGetLongv
 * Signature: (I)[J
 */
JNIEXPORT jlongArray JNICALL Java_com_uce_userlab_haptics_HD_HDAPI_hdGetLongv
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_uce_userlab_haptics_HD_HDAPI
 * Method:    hdGetCurrentDevice
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_com_uce_userlab_haptics_HD_HDAPI_hdGetCurrentDevice
  (JNIEnv *, jclass);

/*
 * Class:     com_uce_userlab_haptics_HD_HDAPI
 * Method:    hdGetString
 * Signature: (I)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_uce_userlab_haptics_HD_HDAPI_hdGetString
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_uce_userlab_haptics_HD_HDAPI
 * Method:    hdInitDevice
 * Signature: (Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_com_uce_userlab_haptics_HD_HDAPI_hdInitDevice
  (JNIEnv *, jclass, jstring);

/*
 * Class:     com_uce_userlab_haptics_HD_HDAPI
 * Method:    hdIsEnabled
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_com_uce_userlab_haptics_HD_HDAPI_hdIsEnabled
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_uce_userlab_haptics_HD_HDAPI
 * Method:    hdMakeCurrentDevice
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_com_uce_userlab_haptics_HD_HDAPI_hdMakeCurrentDevice
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_uce_userlab_haptics_HD_HDAPI
 * Method:    hdSetBooleanv
 * Signature: (I[Z)V
 */
JNIEXPORT void JNICALL Java_com_uce_userlab_haptics_HD_HDAPI_hdSetBooleanv
  (JNIEnv *, jclass, jint, jbooleanArray);

/*
 * Class:     com_uce_userlab_haptics_HD_HDAPI
 * Method:    hdSetIntegerv
 * Signature: (I[I)V
 */
JNIEXPORT void JNICALL Java_com_uce_userlab_haptics_HD_HDAPI_hdSetIntegerv
  (JNIEnv *, jclass, jint, jintArray);

/*
 * Class:     com_uce_userlab_haptics_HD_HDAPI
 * Method:    hdSetFloatv
 * Signature: (I[F)V
 */
JNIEXPORT void JNICALL Java_com_uce_userlab_haptics_HD_HDAPI_hdSetFloatv
  (JNIEnv *, jclass, jint, jfloatArray);

/*
 * Class:     com_uce_userlab_haptics_HD_HDAPI
 * Method:    hdSetDoublev
 * Signature: (I[D)V
 */
JNIEXPORT void JNICALL Java_com_uce_userlab_haptics_HD_HDAPI_hdSetDoublev
  (JNIEnv *, jclass, jint, jdoubleArray);

/*
 * Class:     com_uce_userlab_haptics_HD_HDAPI
 * Method:    hdSetLongv
 * Signature: (I[J)V
 */
JNIEXPORT void JNICALL Java_com_uce_userlab_haptics_HD_HDAPI_hdSetLongv
  (JNIEnv *, jclass, jint, jlongArray);

/*
 * Class:     com_uce_userlab_haptics_HD_HDAPI
 * Method:    hdCheckCalibration
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_com_uce_userlab_haptics_HD_HDAPI_hdCheckCalibration
  (JNIEnv *, jclass);

/*
 * Class:     com_uce_userlab_haptics_HD_HDAPI
 * Method:    hdUpdateCalibration
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_com_uce_userlab_haptics_HD_HDAPI_hdUpdateCalibration
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_uce_userlab_haptics_HD_HDAPI
 * Method:    hdGetSchedulerTimeStamp
 * Signature: ()D
 */
JNIEXPORT jdouble JNICALL Java_com_uce_userlab_haptics_HD_HDAPI_hdGetSchedulerTimeStamp
  (JNIEnv *, jclass);

/*
 * Class:     com_uce_userlab_haptics_HD_HDAPI
 * Method:    hdScheduleAsynchronous
 * Signature: (Lcom/uce/userlab/haptics/HD/HDCallback;[Ljava/lang/Object;S)V
 */
JNIEXPORT void JNICALL Java_com_uce_userlab_haptics_HD_HDAPI_hdScheduleAsynchronous
  (JNIEnv *, jclass, jobject, jobjectArray, jshort);

/*
 * Class:     com_uce_userlab_haptics_HD_HDAPI
 * Method:    hdScheduleSynchronous
 * Signature: (Lcom/uce/userlab/haptics/HD/HDCallback;[Ljava/lang/Object;S)V
 */
JNIEXPORT void JNICALL Java_com_uce_userlab_haptics_HD_HDAPI_hdScheduleSynchronous
  (JNIEnv *, jclass, jobject, jobjectArray, jshort);

/*
 * Class:     com_uce_userlab_haptics_HD_HDAPI
 * Method:    hdSetSchedulerRate
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_uce_userlab_haptics_HD_HDAPI_hdSetSchedulerRate
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_uce_userlab_haptics_HD_HDAPI
 * Method:    hdStartScheduler
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_com_uce_userlab_haptics_HD_HDAPI_hdStartScheduler
  (JNIEnv *, jclass);

/*
 * Class:     com_uce_userlab_haptics_HD_HDAPI
 * Method:    hdStopScheduler
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_com_uce_userlab_haptics_HD_HDAPI_hdStopScheduler
  (JNIEnv *, jclass);

/*
 * Class:     com_uce_userlab_haptics_HD_HDAPI
 * Method:    hdUnschedule
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_com_uce_userlab_haptics_HD_HDAPI_hdUnschedule
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_uce_userlab_haptics_HD_HDAPI
 * Method:    hdWaitForCompletion
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_com_uce_userlab_haptics_HD_HDAPI_hdWaitForCompletion
  (JNIEnv *, jclass, jint, jint);

#ifdef __cplusplus
}
#endif
#endif
